/**
 * This file was automatically generated by Nexus 0.11.6
 * Do not make changes to this file directly
 */




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  PlayerCreateInput: { // input type
    _id?: string | null; // ID
    losses: number; // Int!
    name: string; // String!
    race: string; // String!
    realm: string; // String!
    wins: number; // Int!
  }
  PlayerUpdateInput: { // input type
    losses?: number | null; // Int
    name?: string | null; // String
    race?: string | null; // String
    realm?: string | null; // String
    wins?: number | null; // Int
  }
  PlayerWhereInput: { // input type
    _id?: string | null; // ID
    _id_contains?: string | null; // ID
    _id_ends_with?: string | null; // ID
    _id_gt?: string | null; // ID
    _id_gte?: string | null; // ID
    _id_in?: string[] | null; // [ID!]
    _id_lt?: string | null; // ID
    _id_lte?: string | null; // ID
    _id_not?: string | null; // ID
    _id_not_contains?: string | null; // ID
    _id_not_ends_with?: string | null; // ID
    _id_not_in?: string[] | null; // [ID!]
    _id_not_starts_with?: string | null; // ID
    _id_starts_with?: string | null; // ID
    AND?: NexusGenInputs['PlayerWhereInput'][] | null; // [PlayerWhereInput!]
    losses?: number | null; // Int
    losses_gt?: number | null; // Int
    losses_gte?: number | null; // Int
    losses_in?: number[] | null; // [Int!]
    losses_lt?: number | null; // Int
    losses_lte?: number | null; // Int
    losses_not?: number | null; // Int
    losses_not_in?: number[] | null; // [Int!]
    name?: string | null; // String
    name_contains?: string | null; // String
    name_ends_with?: string | null; // String
    name_gt?: string | null; // String
    name_gte?: string | null; // String
    name_in?: string[] | null; // [String!]
    name_lt?: string | null; // String
    name_lte?: string | null; // String
    name_not?: string | null; // String
    name_not_contains?: string | null; // String
    name_not_ends_with?: string | null; // String
    name_not_in?: string[] | null; // [String!]
    name_not_starts_with?: string | null; // String
    name_starts_with?: string | null; // String
    race?: string | null; // String
    race_contains?: string | null; // String
    race_ends_with?: string | null; // String
    race_gt?: string | null; // String
    race_gte?: string | null; // String
    race_in?: string[] | null; // [String!]
    race_lt?: string | null; // String
    race_lte?: string | null; // String
    race_not?: string | null; // String
    race_not_contains?: string | null; // String
    race_not_ends_with?: string | null; // String
    race_not_in?: string[] | null; // [String!]
    race_not_starts_with?: string | null; // String
    race_starts_with?: string | null; // String
    realm?: string | null; // String
    realm_contains?: string | null; // String
    realm_ends_with?: string | null; // String
    realm_gt?: string | null; // String
    realm_gte?: string | null; // String
    realm_in?: string[] | null; // [String!]
    realm_lt?: string | null; // String
    realm_lte?: string | null; // String
    realm_not?: string | null; // String
    realm_not_contains?: string | null; // String
    realm_not_ends_with?: string | null; // String
    realm_not_in?: string[] | null; // [String!]
    realm_not_starts_with?: string | null; // String
    realm_starts_with?: string | null; // String
    wins?: number | null; // Int
    wins_gt?: number | null; // Int
    wins_gte?: number | null; // Int
    wins_in?: number[] | null; // [Int!]
    wins_lt?: number | null; // Int
    wins_lte?: number | null; // Int
    wins_not?: number | null; // Int
    wins_not_in?: number[] | null; // [Int!]
  }
  PlayerWhereUniqueInput: { // input type
    _id?: string | null; // ID
  }
}

export interface NexusGenEnums {
  PlayerOrderByInput: "_id_ASC" | "_id_DESC" | "losses_ASC" | "losses_DESC" | "name_ASC" | "name_DESC" | "race_ASC" | "race_DESC" | "realm_ASC" | "realm_DESC" | "wins_ASC" | "wins_DESC"
}

export interface NexusGenRootTypes {
  Mutation: {};
  Player: { // root type
    _id: string; // ID!
    losses: number; // Int!
    name: string; // String!
    race: string; // String!
    realm: string; // String!
    wins: number; // Int!
  }
  Query: {};
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  PlayerCreateInput: NexusGenInputs['PlayerCreateInput'];
  PlayerUpdateInput: NexusGenInputs['PlayerUpdateInput'];
  PlayerWhereInput: NexusGenInputs['PlayerWhereInput'];
  PlayerWhereUniqueInput: NexusGenInputs['PlayerWhereUniqueInput'];
  PlayerOrderByInput: NexusGenEnums['PlayerOrderByInput'];
}

export interface NexusGenFieldTypes {
  Mutation: { // field return type
    createPlayer: NexusGenRootTypes['Player']; // Player!
    deletePlayer: NexusGenRootTypes['Player'] | null; // Player
    updatePlayer: NexusGenRootTypes['Player'] | null; // Player
    upsertPlayer: NexusGenRootTypes['Player']; // Player!
  }
  Player: { // field return type
    _id: string; // ID!
    losses: number; // Int!
    name: string; // String!
    race: string; // String!
    realm: string; // String!
    wins: number; // Int!
  }
  Query: { // field return type
    player: NexusGenRootTypes['Player'] | null; // Player
    players: NexusGenRootTypes['Player'][]; // [Player!]!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createPlayer: { // args
      data: NexusGenInputs['PlayerCreateInput']; // PlayerCreateInput!
    }
    deletePlayer: { // args
      where: NexusGenInputs['PlayerWhereUniqueInput']; // PlayerWhereUniqueInput!
    }
    updatePlayer: { // args
      data: NexusGenInputs['PlayerUpdateInput']; // PlayerUpdateInput!
      where: NexusGenInputs['PlayerWhereUniqueInput']; // PlayerWhereUniqueInput!
    }
    upsertPlayer: { // args
      create: NexusGenInputs['PlayerCreateInput']; // PlayerCreateInput!
      update: NexusGenInputs['PlayerUpdateInput']; // PlayerUpdateInput!
      where: NexusGenInputs['PlayerWhereUniqueInput']; // PlayerWhereUniqueInput!
    }
  }
  Query: {
    player: { // args
      where: NexusGenInputs['PlayerWhereUniqueInput']; // PlayerWhereUniqueInput!
    }
    players: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      orderBy?: NexusGenEnums['PlayerOrderByInput'] | null; // PlayerOrderByInput
      skip?: number | null; // Int
      where?: NexusGenInputs['PlayerWhereInput'] | null; // PlayerWhereInput
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Mutation" | "Player" | "Query";

export type NexusGenInputNames = "PlayerCreateInput" | "PlayerUpdateInput" | "PlayerWhereInput" | "PlayerWhereUniqueInput";

export type NexusGenEnumNames = "PlayerOrderByInput";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}